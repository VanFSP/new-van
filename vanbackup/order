gcc：
预处理 -> 编译 -> 汇编 -> 链接
预处理：gcc -E ：main.c -> main.i 
编  译：gcc -S ：main.i -> main.s
汇  编：gcc -c ：main.s -> main.o
链  接：gcc -o ：main.o -> main/main.exe(可执行文件)
1.-o：将输出文件放到<file>/指定输出文件文件名为<file>
2.gcc main.c ：不加任何参数，直接编译生成可执行文件
3.-D：宏定义选项，等同于代码中的#define 但-D定义的宏作用于所有的源文件
gcc -D PI=3.14159 main.c
4.-l：头文件的搜索路径：如果用户的头文件不在/usr/include目录中,可以指定额外搜索路径
gcc main.c -l /usr/include
-llibrary 名为library的动态链接库，实际上在文件系统的的名字为liblibrary.so，连接器会自动加上lib*.so
5.-w：禁止所有警告信息
6.-Wall：打开所有警告选项，输出警告信息
7.归档为静态库：
gcc -c main.c 
ar crv/-r libmain.a main.o
gcc main.c -L(+静态库目录） -static -o main
8.-stataic：指使用静态库编译
9.-L：用户自定义共享库文件的搜索路径(gcc首先会在自定义的目录中搜索库文件)

linux命令：
目录命令：
浏览目录：ls pwd
目录操作：cd mkdir rmdir
浏览文件：cat more less head tail
文件操作：cp rm mv find grep tar

pwd：print working directory 显示当前所在的目录

ls：list 显示目录文件
1.-a 2.-l 3.-d

cd：change directory 改变/切换目录
1.cd /  2.cd ..(回到上一级目录)

mkdir：make directory 创建新目录 mkdir directoryname

rmdir：remove directory 删除空目录(非空不可以删除)

cat：concatenate and display files 链接文件并打印到标准输出设备上 -E 在每一行的末尾显示$ -n为显示行添加行号
1.cat filename 2 cat file1name file2name

more：分页显示文件内容
1.more filename 2.(空格)或f显示下一页3.(enter)显示下一行 4.q 或Q退出

less：与more类似less 区别在于可以使用上下键卷动文件

head：用于显示文件前几行的内容
1.-n 显示前n行，不指定此参数显示前10行
tail：用于显示文件后几行的内容
1.-n 显示后n行，不指定此参数显示后10行
2.+n 从第n行显示到文件尾
3.-F 用于跟踪显示不断增长的文件结尾内容(通常用于显示日志文件)

cp：将一个文件复制到另一处 copy
1.cp 参数 源文件路径 目标文件路径
2.-p 连同文件的属性一起复制，而非使用默认方式，常用于备份
3.-i 若目标文件已经存在时，在覆盖时会先询问操作的进行
4.-r 递归持续复制，用于目录的复制行为
5.-u 目标文件与源文件有差异时才会复制

rm：删除目录或文件(remove)
1.rm 参数 目标文件路径
2.-f (force) 忽略不存在文件，不会出现警告消息，强迫删除
3.-i 互动模式，删除前询问用户是否操作(使用Y或N表示允许或拒绝删除)
4.-r 递归删除，常用于目录删除，删除该目录下所有文件以及子目录
5.* 删除当前目录下所有文件

mv：移动文件或者目录(move)
1.

find：用来寻找文件或目录
1.find 路径 参数
2.-name filename：找出文件名为filename的文件
3.-size[+-]SIZE：找出比SIZE还要大或小的文件
4.-type TYPE：查找文件的类型为TYPE的文件，TYPE的值主要有：一般文件(f)，设备文件(b或c)，目录(d)，链接文件(l)，socket(s)，FIFO管道文件(p)
5.-perm mode：查找文件权限刚好等于mode的文件，mode用数字表示

grep：在文件中搜索匹配的字符并出输出该字符串所在行
1.grep 参数 要找的字串 要找字串的源文件
2.-a：将binary文件以text文件的方式查找数据 
3.-i：忽略大小写的区别
4.-v：反向选择，显示出不包含‘查找字符串’内容的一行
5.-c：计算找到‘查找字符串’的次数


tar：能够将用户所指定的文件或目录打包成一个文件，也可以通过指定参数开启压缩/解压功能
1.-c 新建打包文件
2.-t 查看打包文件的内容含有那些文件名
3.-x 解打包或解压缩的功能，可以搭配-C指定解压的目录，注意-c,-t,-x不能同时出现在同一个命令中
4.-j 通过bzip2的支持进行压缩/解压缩
5.-z 通过gzipd的支持进行压缩/解压缩
6.-v 在压缩/解压缩过程中，将正在处理的文件名显示出来
7.-f filename filename为要处理的文件
8.-C dir 指定压缩/解用压缩的目录dir


进程命令：
查看系统中的进程：ps top
控制系统中的进程：kill killall nice renice
进程后台运行：&
进程的挂起和恢复：
挂起(Ctrl+Z) 终止(Ctrl+C)
进程恢复：
1.恢复到前台继续运行(fg) fg[n]
2.恢复到后台继续运行(bg) bg[n]
查看被挂起的进程(jobs)

ps：显示系统瞬间的进程信息，可以显示出在用户输入ps命令时系统的进程以及进程的相关信息
1.ps 参数
2.l 长格式输出
3.u 按用户名和启动时间的顺序来显示进程
4.j 用任务格式来显示进程
5.f 用树形格式来显示进程
6.a 显示所有用户的所有进程(包括其他用户)
7.x 显示无控制终端的进程
8.r 显示运行中的进程

top：动态监视系统任务的工具(任务管理器) 输出结果是连续的
1.top 参数
2.-b 
3.-c
4.-d
5.-i
6.-n
7.-p 
8.-q
9.-s
10.-S

kill：

killall：

nice：

renice：


用户及权限管理类命令：
用户管理类命令：useradd usermod passwd userdel su id whoami w finger
用户组管理类命令：groupadd groupmod groupdel 
文件权限管理类命令：chmod chown chgrp

linux用户分三类：
1.超级用户：拥有最高权限(即root用户)
2.系统用户：与系统服务相关，但不能用于登录
3.普通用户：由超级用户创建并赋予权限，只能操作其拥有权限的文件和目录，只能管理自己启动的进程

用户信息：
1.用户名：唯一，由字母，数字和符号组成
2.口名(密码)
3.用户ID(uid)：每个用户拥有的惟一的识别号码，超级用户为0,系统用户1-499,普通用户的500开始
4.用户组ID(gid)
5.用户主目录
6.全程：用户账户的附加信息，可以为空
7.登录Shell：默认是用Bash

×××用户帐号信息文件/etc/passwd
1.文件每一行都是一个用户的信息
2.文件各字段从左到右依次为：用户名，口令，用户ID，用户组，全称，用户主目录和登陆Shell
3.口令字段用x来填充，加密后的口令保存在/etc/shadow文件中
×××用户口令信息文件/etc/shadow
1.shadow文件只有超级用户可以查看并修改器内容，而且加密存储

用户组：相同特性的用户的集合，包括系统用户组和私人用户组
用户组优点：简化用户管理，方便用户之间共享文件
一个用户只能属于一个用户组，但可以同时属于多个附加组
用户不仅拥有用户组的权限，还同时拥有附加组的权限
×××用户组帐号信息文件/etc/group
1.每一行为一个用户组信息
2.文件中各字段从左到右以此为：用户组名，口令，用户组ID和附加用户列表
×××用户组口令信息文件/etc/gshadow
×××用户个人文件：主目录默认位于/home/用户名
×××用户邮箱文件：默认位于/var/spod/mail/用户名

×××创建用户时依照/etc/login.def 和/etc/default/useradd (创建用户的默认设置文件)进行创建的 

useradd：新建用户帐号(超级用户可用)
1.useradd 参数 用户名
2.-d 指定用户登入时的主目录
3.-s 指定账户登录后所使用的shell
4.-e 账户终止日期
5.-u 指定用户ID
6.-G 指定账户所属的附加组-g 指定账户所属的用户组

passwd ：设置或修改用户的口令以及口令属性
1.passwd 或者passwd username 更改用户密码

usermod：修改用户属性
1.-u 用户账户的新UID usermod -u newuid olduid
2.-l 新的登录名 usermod -l newname oldname
3.-h 用户的新主目录
4.-m 将家目录内容移至新位置(仅与-d 一起使用)
5.-s 该用户帐号的新登录 shell

userdel：删除指定的用户帐号
1.-f 即使不属于此用户，也强制删除文件
2.-h 显示此帮助信息并退出 
3.-r 删除主目录和邮件池
4.-R chroot到的目录 
5.-Z 为用户删除所有的SELinux用户映射

su：切换用户身份
1.su 用户名
2.超级用户可以切换为任何普通用户且不需要口令，普通用户切换为其他用户时需要输入被切换用户的口令
3.使用exit可以返回到本来的用户身份
4.su root 是切换到超级用户，但是依然保持旧的环境，而su - root不仅是切换到超级用户，而且创建了一个新的环境

sudo：让普通用户执行一些或者全部的root命令的一个工具，是面向每一个命令的,(即提升用户权限)
1.需要输入当前用户的密码，回答系统即会将命令的进程以超级用户的权限运行，之后的一段时间内(默认为5分钟)使用sudo不需要再次输入密码
2.配置文件是sudoers文件，默认位置/etc/sudoers,它允许系统管理员集中的管理用户的使用权限和使用的主机
3.检测安装：rpm -q sudo

real user id：
effective user id：
saved user id：
ID:：身份证标识号
id：查看用户的UID，GID和用户所属用户组的信息，若不指定用户，则显示当前用户的相关信息
1.id 用户名
2.-a 忽略，以便于其他版本兼容
3.-g 打印有效组的ID
4.-G 打印所有组的ID
5.-u 只打印有效的用户ID
6.-r 打印真正的ID来代替有效的ID
7.-n 打印名字来代替数

whoami：显示与当前的有效用户ID相关联的用户名
1.相当于id -un

w：查看当前登陆系统用户和详细信息

groupadd：新建组群(超级用户可用)
1.groupadd 参数 用户组名
2.-g 指定用户组ID
3.-o 允许组ID号不唯一

groupmod：修改指定用户组的属性(超级用户可用)
1.group 参数 用户名
2.-g：指定新的用户组ID
3.-n：指定新的用户组名字
4.-o：允许组ID号不唯一

groupdel：删除指定用户组(超级用户可用)
1.group 用户组名
2.删除之前必须保证该用户组不是任何用户的主要组群，否则要先删除依次用户组为主要族群的用户才可以删除该用户组

读取权限：浏览文件或目录中的内容的权限
写入权限：
1.修改文件内容权限
2.删除，添加和重命名目录内文件的权限
执行权限：
1.允许执行的权限
2.进入目录的权限

文件用户的分类：


chmod：修改文件访问权限
1.chmod 模式 文件
2.u 文件所有者 g 同组用户 o 其他用户
3.+ 增加 - 删除 = 赋予
4.r 读 w 写 x 执行 s 设置用户ID 

chown：将指定文件的拥有者改为指定的用户或用户组
1.chown 选项 所有者/组 文件

chgrp：修改文件的所属用户组
1.chgrp 选项 组 文件

